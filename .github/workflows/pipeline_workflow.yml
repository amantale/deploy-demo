name: PR/CI
run-name: ${{ github.event.pull_request.merged && 'CI' || 'PR' }} build for ${{ github.ref_name }}
on:
  workflow_dispatch:
  pull_request:
    types:
      - ready_for_review
      - converted_to_draft
      - opened
      - synchronize
      - reopened
      - closed

concurrency:
  group: ${{ github.event_name }}_${{ github.ref_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  setup-job:
    name: Setup
    if: github.event.pull_request.draft != true
    runs-on: ubuntu-latest
    outputs:
      project-branch: ${{ steps.project-branch.outputs.name }}
      is-pr: ${{ steps.is-pr.outputs.value }}
      base-ref: ${{ steps.base.outputs.ref }}
      base-sha: ${{ steps.base.outputs.sha }}
      head-sha: ${{ steps.head.outputs.sha }}
      pr-number: ${{ steps.pr-number.outputs.value }}
      run-type: ${{ steps.run-type.outputs.type }}

    steps:
      - name: Determine run type
        id: run-type
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
           if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
              echo "type=ci" >> $GITHUB_OUTPUT
           else
              echo "type=pr" >> $GITHUB_OUTPUT
           fi
           exit 0
          fi

          if [ "${{ github.event_name }}" = "push" ]; then
            echo "type=ci" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "type=manual" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "::error::Unknown event."
          exit 1

      - name: Determine if pr
        id: is-pr
        run: echo "value=${{ github.event_name == 'pull_request' }}" >> $GITHUB_OUTPUT

      - name: Determine base-ref
        id: base
        if: steps.is-pr.outputs.value == 'true'
        run: |
          echo "sha=${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}" >> $GITHUB_OUTPUT
          echo "ref=${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}" >> $GITHUB_OUTPUT

      - name: Determine head-sha
        id: head
        if: steps.is-pr.outputs.value == 'true'
        run: |
          echo "sha=${{ github.event.pull_request.head.sha || github.event.merge_group.head_sha }}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3

      - name: Get project branch name
        id: project-branch
        run: echo "name=${{ steps.is-pr.outputs.value == 'true' && github.head_ref || github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Match PR number from branch name
        id: find-pr-from-branch
        uses: MeilCli/regex-match@v1.5.27
        if: github.event_name == 'pull_request'
        with:
          search_string: ${{ steps.project-branch.outputs.name }}
          regex_pattern: '.*/pr-(\d+)-.*'

      - name: Extract PR number from match
        id: extract-pr
        if: github.event_name == 'pull_request'
        run: |
          echo '${{ steps.find-pr-from-branch.outputs.matched_json }}'
          echo pr=$(echo '${{ steps.find-pr-from-branch.outputs.matched_json }}' | jq -r 'nth(1)') >> $GITHUB_OUTPUT

      - name: Set PR number
        id: pr-number
        run: |
          echo "value=${{ github.event_name == 'pull_request' && github.event.pull_request.number || steps.extract-pr.outputs.pr }}" >> $GITHUB_OUTPUT 

      - name: Create job summary
        run: |
          echo "| Name | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| ---- | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| project Branch | ${{steps.project-branch.outputs.name}} |" >> $GITHUB_STEP_SUMMARY
          echo "| runType | ${{steps.run-type.outputs.type}} |" >> $GITHUB_STEP_SUMMARY
          echo "| isPr | ${{steps.is-pr.outputs.value}} |" >> $GITHUB_STEP_SUMMARY
          echo "| baseRef | ${{steps.base.outputs.ref}} |" >> $GITHUB_STEP_SUMMARY
          echo "| baseSha | ${{steps.base.outputs.sha}} |" >> $GITHUB_STEP_SUMMARY
          echo "| headSha | ${{steps.head.outputs.sha}} |" >> $GITHUB_STEP_SUMMARY
          echo "| pr key | ${{steps.pr-number.outputs.value}} |" >> $GITHUB_STEP_SUMMARY

  unit-tests:
    name: Unit Tests
    needs: [ setup-job ]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up TemurinJDK 17 and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: artifactory
          server-username: ARTIFACTORY_ACCESS_TOKEN_USERNAME
          server-password: ARTIFACTORY_ACCESS_TOKEN

      - name: Run unit tests manually
        if: needs.setup-job.outputs.run-type == 'manual'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn clean verify

      - name: Run unit tests automatically
        if: needs.setup-job.outputs.run-type != 'manual'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn clean verify 

  package-artifactory:
    name: Build and Publish
    needs: [ setup-job ]
    runs-on: ubuntu-latest
    steps:
      - name: Run publish to artifactory pipeline
        id: publish-to-artifactory
        uses: ./.github/workflows/publish_artifactory.yml
#        secrets: inherit

      - name: Create workflow summary
        run: |
          echo "| Name | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| ---- | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| Artifactory Image Tag | ${{ needs.publish-to-artifactory.outputs.artifactory-version-tag }} |" >> $GITHUB_STEP_SUMMARY
