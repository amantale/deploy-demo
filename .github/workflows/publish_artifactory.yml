name: Build
run-name: Build ${{ github.ref_name }}
on:
  workflow_dispatch:
  workflow_call:
    outputs:
      artifactory-version-tag:
        description: "Artifactory version Tag"
        value: ${{ jobs.package_artifactory.outputs.artifactory-version-tag }}


jobs:
  package_artifactory:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Set up TemurinJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: artifactory
          server-username: ARTIFACTORY_ACCESS_READ_TOKEN_USERNAME
          server-password: ARTIFACTORY_ACCESS_READ_TOKEN
          cache: 'maven'


      - name: Outputs reader and writer token token
        shell: bash
        run: |
          echo "ARTIFACTORY_ACCESS_READ_TOKEN_USERNAME=${{ secrets.ARTIFACTORY_ACCESS_TOKEN_USERNAME }}" >> $GITHUB_ENV
          echo "ARTIFACTORY_ACCESS_READ_TOKEN=${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}" >> $GITHUB_ENV

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: http://deploydemo.jfrog.io
          username: ${{ env.ARTIFACTORY_ACCESS_TOKEN_USERNAME }}
          password: ${{ env.ARTIFACTORY_ACCESS_TOKEN }}

      - name: Create tag version
        id: tag-version
        run: |
          SHA=$(echo "${{ needs.setup-job.outputs.head-sha }}-$(uuidgen)" | sha1sum)
          DATE=$(date +%Y-%m-%d)
          echo "tag=v${DATE}-$(echo $SHA | cut -c1-4)" >> $GITHUB_OUTPUT

      - name: Build project, create docker image and publish to artifactory
        shell: bash
        run: |
          set -ueo pipefail
          [[ "${{ steps.settings.outputs.verbose }}" == "true" ]] && set -ueox pipefail
          mvn --batch-mode clean install
          mvn -X --debug jib:build \
          -Djib.skip=false \
          -Djib.from.image=http://deploydemo.jfrog.io/library/eclipse-temurin:17 \
          -Ddocker.repo=deploy-demo \
          -Dimage.version='${{ steps.tag-version.outputs.tag }}' \
          -Dimage=microservice1
